apply plugin: 'maven-publish'
apply plugin: 'signing'

def signingKeyBase64 = findProperty("GPG_SIGNING_IN_MEMORY_KEY")
def signingPassword = findProperty("GPG_SIGNING_IN_MEMORY_KEY_PWD")

def base64Decode(encodedString){
    if(encodedString != null) {
        byte[] decoded = encodedString.decodeBase64()
        String decode = new String(decoded)
        return decode
    }
    return null;
}

signing {
    if(project.hasProperty("PUBLISH_TO_MAVEN_CENTRAL")){
        useInMemoryPgpKeys(base64Decode(signingKeyBase64), signingPassword)
        sign publishing.publications
    }
}

android {
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate {
    publishing {

        publications {
            release(MavenPublication) {
                from components.release
                artifactId libraryArtifactId
                groupId = 'live.ditto'

                def versionPropertyName = "LIBRARY_VERSION"
                version = hasProperty(versionPropertyName) ? findProperty(versionPropertyName) : getProperty(versionPropertyName, null)

                pom {
                    name = 'Ditto Tools'
                    description = 'Ditto Tools'
                    url = 'https://ditto.live'

                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://opensource.org/license/mit/'
                        }
                    }

                    // https://github.com/getditto/DittoAndroidTools
                    scm {
                        connection = 'scm:git:github.com/getditto/DittoAndroidTools.git'
                        developerConnection = 'scm:git:ssh://github.com/getditto/DittoAndroidTools.git'
                        url = 'https://ditto.live'
                    }

                    developers {
                        developer {
                            id = 'ditto'
                            name = 'Ditto'
                            email = 'support@ditto.live'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username = findProperty("MAVEN_CENTRAL_USERNAME")
                    password = findProperty("MAVEN_CENTRAL_PASSWORD")
                }

                def releasesRepoUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                def snapshotsRepoUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}