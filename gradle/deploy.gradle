apply plugin: 'maven-publish'
apply plugin: 'signing'

def getValueFromPropertiesFile = { propFile, key ->
    if (!propFile.isFile() || !propFile.canRead())
        return null
    def prop = new Properties()
    def reader = propFile.newReader()
    try {
        prop.load(reader)
    } finally {
        reader.close()
    }
    return prop.get(key)
}

def getProperty = { name, defValue ->
    def prop = project.properties[name] ?:
            getValueFromPropertiesFile(project.rootProject.file('local.properties'), name)
    return (null == prop) ? defValue : prop
}

ext['signing.keyId'] = getProperty('signing.keyId', null)
ext['signing.password'] = getProperty('signing.password', null)
ext['signing.secretKeyRingFile'] = getProperty('signing.secretKeyRingFile', null)
ext.ossrhUsername = getProperty('ossrhUsername', null)
ext.ossrhPassword = getProperty('ossrhPassword', null)

android {
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId libraryGroupId
                artifactId libraryArtifactId
                version libraryVersion

                pom {
                    name = 'Ditto Tools'
                    description = 'Ditto Tools'
                    url = 'https://ditto.live'

                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://opensource.org/license/mit/'
                        }
                    }

                    // https://github.com/getditto/DittoAndroidTools
                    scm {
                        connection = 'scm:git:github.com/getditto/DittoAndroidTools.git'
                        developerConnection = 'scm:git:ssh://github.com/getditto/DittoAndroidTools.git'
                        url = 'https://ditto.live'
                    }

                    developers {
                        developer {
                            id = 'ditto'
                            name = 'Ditto'
                            email = 'support@ditto.live'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "sonatype"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}